//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiscordVideoCompressor.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DiscordVideoCompressor.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The target size is too small for this video..
        /// </summary>
        internal static string BitrateErrorMessage {
            get {
                return ResourceManager.GetString("BitrateErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose a media file.
        /// </summary>
        internal static string ChooseMediaFileButtonText {
            get {
                return ResourceManager.GetString("ChooseMediaFileButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The conversion was canceled..
        /// </summary>
        internal static string ConversionCanceledMessage {
            get {
                return ResourceManager.GetString("ConversionCanceledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conversion error: .
        /// </summary>
        internal static string ConversionErrorMessage {
            get {
                return ResourceManager.GetString("ConversionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conversion completed: .
        /// </summary>
        internal static string ConversionSuccessMessage {
            get {
                return ResourceManager.GetString("ConversionSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Convert.
        /// </summary>
        internal static string ConvertationButtonText {
            get {
                return ResourceManager.GetString("ConvertationButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom size (MB):.
        /// </summary>
        internal static string CustomSizeLabel {
            get {
                return ResourceManager.GetString("CustomSizeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to determine the video duration. ffmpeg output:.
        /// </summary>
        internal static string DurationErrorMessage {
            get {
                return ResourceManager.GetString("DurationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter a valid size in MB..
        /// </summary>
        internal static string EnterValidSizeMessage {
            get {
                return ResourceManager.GetString("EnterValidSizeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        internal static string ErrorTitle {
            get {
                return ResourceManager.GetString("ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ffmpeg Extraction failed..
        /// </summary>
        internal static string FfmpegExtractionErrorMessage {
            get {
                return ResourceManager.GetString("FfmpegExtractionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to achieve the desired file size..
        /// </summary>
        internal static string FileConversionErrorMessage {
            get {
                return ResourceManager.GetString("FileConversionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file does not exist..
        /// </summary>
        internal static string FileNotExistError {
            get {
                return ResourceManager.GetString("FileNotExistError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Force stop.
        /// </summary>
        internal static string ForceStopButtonText {
            get {
                return ResourceManager.GetString("ForceStopButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid file extension..
        /// </summary>
        internal static string InvalidFileFormatMessage {
            get {
                return ResourceManager.GetString("InvalidFileFormatMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message.
        /// </summary>
        internal static string MessageTitle {
            get {
                return ResourceManager.GetString("MessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected file: .
        /// </summary>
        internal static string SelectedFileLabelText {
            get {
                return ResourceManager.GetString("SelectedFileLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please choose a media file..
        /// </summary>
        internal static string SelectMediaFileMessage {
            get {
                return ResourceManager.GetString("SelectMediaFileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please select a size option..
        /// </summary>
        internal static string SelectSizeOptionMessage {
            get {
                return ResourceManager.GetString("SelectSizeOptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Size option.
        /// </summary>
        internal static string SizeOptionLabel {
            get {
                return ResourceManager.GetString("SizeOptionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success.
        /// </summary>
        internal static string SuccessTitle {
            get {
                return ResourceManager.GetString("SuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error converting time. Debug: Check the time string format..
        /// </summary>
        internal static string TimeConversionErrorMessage {
            get {
                return ResourceManager.GetString("TimeConversionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The video duration is incorrect..
        /// </summary>
        internal static string VideoDurationErrorMessage {
            get {
                return ResourceManager.GetString("VideoDurationErrorMessage", resourceCulture);
            }
        }
    }
}
